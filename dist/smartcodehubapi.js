!function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/",n(n.s=7)}([function(e,t){e.exports=require("mongoose")},function(e,t){e.exports=require("express")},function(e,t){e.exports=require("path")},function(e,t){const n=e=>async(t,n)=>{try{return n.send(await e.find())}catch(e){return n.status(400).send(e.message)}},a=e=>async(t,n)=>{try{return n.send(await e.findById(t.params.id))}catch(e){return n.status(400).send(e.message)}},s=e=>async(t,n)=>{try{return n.send(await e.findOneAndUpdate({_id:t.params.id},{...t.body},{new:!0}))}catch(e){return n.status(400).send(e.message)}},r=e=>async(t,n)=>{console.log();try{return n.send(await e.remove({_id:t.params.id}))}catch(e){return n.status(400).send(e.message)}},o=e=>async(t,n)=>{try{return n.send(await e.remove({_id:{$in:t.body.ids}}))}catch(e){return n.status(400).send(e.message)}},i=e=>async(t,n)=>{try{const a=await e.create({...t.body});return n.send(a)}catch(e){return n.status(400).send(e.message)}};e.exports=e=>({GetAll:n(e),GetOneById:a(e),UpdateById:s(e),Delete:r(e),Create:i(e),DeleteAll:o(e)})},function(e,t){e.exports=require("jsonwebtoken")},function(e,t){e.exports={environment:{production:!1,secret:"thisismystring"}}},function(e,t){e.exports=require("smart-slack-notifier")},function(e,t,n){const a=n(1),s=n(0),r=n(2),o=n(8),i=n(9),{ProcessMessageForSlack:d}=n(6),u=n(17),c=process.env.port||3666;s.connect("mongodb+srv://neeraj:Neeraj%401234@cluster0-jrge0.azure.mongodb.net/smartcodehub",{useNewUrlParser:!0,useUnifiedTopology:!0}).then(e=>{}).catch(e=>{console.error("DB ERROR :::  ",e)}),console.log(c);const l=a();l.use(a.json()),l.use(o()),l.get("/api",async(e,t)=>{console.info("Api Status : Seems Good"),t.send({message:"Welcome to smartcodehub api now updated  -- from  docker goes on and go from"})}),l.get("/images/*",(e,t)=>{t.sendFile(r.join(__dirname,e.path))}),l.get("/errors",(e,t,n)=>{n({message:"Something went wrong"})}),l.use("/api/user",i),l.use("/api/entities",u),l.listen(c,()=>{}),l.use(async(e,t,n,a)=>{try{console.log(e),await d("CHANNEL_ERROR_API",e),n.status(500).send({Message:"Please try again"})}catch(t){n.status(500).send(e)}})},function(e,t){e.exports=require("cors")},function(e,t,n){const a=n(1).Router(),s=n(10);a.route("/").get(s.GetAll).post(s.Create),a.route("/verify/:id/:randomString").get(s.verifyUserEmail),a.route("/resendEmail/:email").get(s.resendEmail),a.route("/:id").get(s.GetOneById).put(s.UpdateById).delete(s.Delete),a.route("/login").post(s.Authenticate),e.exports=a},function(e,t,n){const a=n(11),s=n(3),r=n(12),{sign:o}=n(4),{pick:i}=n(14),{environment:d}=n(5),u=n(15),{ProcessMessageForSlack:c}=n(6),l=new u,y=(e,t)=>`Hi ${e.name} \n        To Activate your Acoount please click on the link below\n        ${t}`;e.exports={...s(a),Authenticate:async(e,t,n)=>{const s=e.body.email,u=await a.findOne({email:s});if(!u)return t.status(400).send({message:"No User Found with this email"});const c=e.body.password;if(!await r.VerifyHash(c,u.password))return t.status(400).send({message:"Wrong Password"});if(!u.isEmailVerified)return t.status(403).send({uid:s,message:"Email Not Verified"});const l={...i(u,["email","name","_id","userType"])},y=o(l,d.secret);t.send({...l,token:y})},Create:async(e,t,n)=>{console.log("Hello");try{const n=await r.GenerateHash(e.body.password),s=Math.round(1e5*Math.random());let o=await a.create({...e.body,salt:s,password:n});const i=`http://${e.get("host")}/api/user/verify/${o._id}/${s}`;202!=(await l.SendVerificationEmail({messageStr:y(o,i),subject:"Account Verification",to:o.email,userName:o.name}))[0].statusCode&&(o=await a.findByIdAndUpdate(o._id,{...e.body,salt:s,isEmailVerified:!0,password:n}));try{await c("CHANNEL_NEW_USER",o)}catch(e){}return t.send(o)}catch(e){console.log(e),n(e)}},resendEmail:async(e,t,n)=>{const s=e.params.email;let r=await a.findOne({email:s});if(!r)return t.status(400).send("Bad Request ");const o=r.salt?r.salt:Math.round(1e5*Math.random());r.salt||(r=await a.update({_id:r.id},{$set:{salt:o}}));const i=`http://${e.get("host")}/api/user/verify/${r._id}/${o}`,d=await l.SendVerificationEmail({messageStr:y(r,i),subject:"Account Verification",to:r.email,userName:r.name});return t.send(d)},verifyUserEmail:async(e,t,n)=>{const s=e.params.id,r=e.params.randomString;if(!s||!r)return t.status(400).send("Bad Request ");let o=await a.findOne({_id:s,salt:r});return o?(o=await a.update({_id:s,salt:r},{$set:{isEmailVerified:!0}}),t.send("Thanks for validating your email Visit https://start.smartcodehub.com and login")):t.status(400).send("Bad Request ")}}},function(e,t,n){const a=n(0),s=new a.Schema({userType:{type:String,enum:["admin","Supplier","user"]},salt:String,isEmailVerified:{type:Boolean,default:!0},isPhoneVerified:{type:Boolean,default:!1},name:{type:String,required:!0},email:{type:String,unique:!0,required:!0},password:{type:String,maxlength:1024,required:!0},phone:{type:Number,maxlength:12,minlength:9,required:!0},joinedOn:{type:Date,default:Date.now},active:{type:Boolean,default:!0},deleted:{type:Boolean,default:!1}});e.exports=a.model("User",s)},function(e,t,n){const a=n(13);e.exports={GenerateHash:async e=>{const t=a.genSaltSync(Math.random());return await a.hash(e,t)},VerifyHash:async(e,t)=>await a.compare(e,t)}},function(e,t){e.exports=require("bcrypt")},function(e,t){e.exports=require("lodash")},function(e,t,n){const a=n(16);e.exports=class{constructor(){a.setApiKey("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")}async SendVerificationEmail(e){const t={to:e.to,from:{email:"verify@smartcodehub.com",name:"Neeraj Dana"},content:[{type:"text/plain",value:e.messageStr}],subject:""+e.subject};try{return await a.send(t)}catch(e){return e}}}},function(e,t){e.exports=require("@sendgrid/mail")},function(e,t,n){const a=n(1),s=(n(2),a.Router()),r=n(18),{verify:o}=n(4),{environment:i}=n(5),d=(e,t,n)=>{const a=e.header("Authorization");if(!a)return t.status(400).send("Token Required");const s=o(a,i.secret);e.uid=s._id,n()};s.route("/").get(d,r.GetAll).post(d,r.Create),s.route("/GetBuUserId").get(d,r.GetByUser),s.route("/GetResoursesByEntity").post(d,r.GetResoursesByEntity),s.route("/GetmultipleResourses").post(d,r.GetmultipleResourses),s.route("/CreateSecureEntitiy").post(d,r.CreateSecureEntitiy),s.route("/DeleteAll").post(d,r.DeleteAll),s.route("/:id").get(d,r.GetOneById).put(d,r.UpdateById).delete(d,r.Delete),e.exports=s},function(e,t,n){const a=n(3),s=n(19),{Types:r}=n(0),{GenerateProject:o}=n(20);async function i(e,t){const n=`images/Entities/${e.uid}-${Date.now()}`;let a=[];e.body.entityList?a=e.body.entityList:a.push(e.body),console.log(a,e.body);const s=await o(e.uid,a,t,"../"+n,__dirname);return console.log("result",s),a&&a.forEach(t=>{d(t,e.uid)}),t?s.zip.replace("../",""):"Saved and updated"}async function d(e,t){if(e.uId=t,console.log(e._id),e._id)console.log("inUpdate"),await s.findOneAndUpdate({_id:e._id},{...e},{new:!0});else{e._id=r.ObjectId(),console.log("increate",e);try{const t=await s.create(e);console.log(t)}catch(e){console.log(e)}}}e.exports={...a(s),GetmultipleResourses:async(e,t,n)=>{try{const n=await i(e,!0);return t.send({url:n})}catch(e){n(e)}},GetByUser:async(e,t,n)=>{try{const n=await s.find({uId:e.uid});return t.send(n)}catch(e){n(e)}},GetOneById:async(e,t,n)=>{try{const n=await s.findById(e.params.id);return t.send(n)}catch(e){n(e)}},UpdateById:async(e,t,n)=>{console.log("filePath");try{const n=await i(e,!1);console.log(n),t.send({url:n})}catch(e){n(e)}},Create:async(e,t,n)=>{try{const n=await i(e,!1);t.send({url:n})}catch(e){console.log(e),n(e)}},GetResoursesByEntity:async(e,t,n)=>{try{const n=await i(e,!1);if(e.body.authEntity){let t=await s.findById(e.body._id);t=await s.update({_id:e.body._id},{$set:{authEntity:{...e.body.authEntity}}})}t.send({url:n})}catch(e){n(e)}},CreateSecureEntitiy:async(e,t,n)=>{console.log("Going To CreateSecureEntitiy");try{if(e.body.authPayLoads){let t=await s.findById(e.body._id);t&&(console.log("Going To Update"),t=await s.update({_id:e.body._id},{$set:{isAuthEntity:!0,authPayLoads:e.body.authPayLoads}}))}t.send({url:"filePath"})}catch(e){n(e)}},GeneratethesetsFromRequest:i,SaveOrUpdateEntity:d}},function(e,t,n){const a=n(0),s=new a.Schema({name:{type:String,required:!0,lowercase:!0},authPayLoads:{type:a.Schema.Types.Mixed,default:null},uId:{type:a.Schema.Types.ObjectId,required:!0},entitySchema:{type:a.Schema.Types.Mixed,required:!0},properties:{type:a.Schema.Types.Mixed,required:!0},isAuthEntity:{type:Boolean,default:!1},authEntity:{type:a.Schema.Types.Mixed,default:null},createdOn:{type:Date,default:Date.now},active:{type:Boolean,default:!0},deleted:{type:Boolean,default:!1}});e.exports=a.model("Entity",s)},function(e,t){e.exports=require("smart-code-generator-library")}]);